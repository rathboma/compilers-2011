Terminals which are not used

   DIV
   FLOAT


Grammar

    0 $accept: program $end

    1 program: PROGRAM ID EOL typeDefinitions variableDeclarations subprogramDeclarations compoundStatement STOP

    2 variableDeclarations: VAR multiVarDeclarations
    3                     | /* empty */

    4 multiVarDeclarations: variableDeclaration EOL multiVarDeclarations
    5                     | variableDeclaration EOL

    6 variableDeclaration: identifierList DECLARE type

    7 identifierList: ID multiIds

    8 multiIds: SEPARATOR identifierList
    9         | /* empty */

   10 subprogramDeclarations: procedureDeclaration EOL subprogramDeclarations
   11                       | functionDeclaration EOL subprogramDeclarations
   12                       | /* empty */

   13 functionDeclaration: func ID PAREN_L formalParameterList PAREN_R DECLARE resultType EOL blockOrForward

   14 resultType: ID

   15 func: FUNC

   16 proc: PROCEDURE

   17 procedureDeclaration: proc ID PAREN_L formalParameterList PAREN_R EOL blockOrForward

   18 blockOrForward: block
   19               | FORWARD

   20 block: variableDeclarations compoundStatement

   21 paramDeclare: identifierList DECLARE type

   22 paramList: paramList EOL paramDeclare
   23          | paramDeclare

   24 formalParameterList: paramList
   25                    | /* empty */

   26 compoundStatement: BGN statementSequence endOfBlock

   27 statementSequence: statement EOL statementSequence
   28                  | statement

   29 statement: open
   30          | matched

   31 otherStatements: compoundStatement
   32                | simpleStatement

   33 open: IF expression THEN statement
   34     | IF expression THEN matched ELSE open
   35     | FOR ID ASSIGNMENT expression TO expression DO open
   36     | WHILE expression DO open

   37 matched: IF expression THEN matched ELSE matched
   38        | otherStatements
   39        | FOR ID ASSIGNMENT expression TO expression DO matched
   40        | WHILE expression DO matched

   41 simpleStatement: assignmentStatement
   42                | procedureStatement
   43                | /* empty */

   44 assignmentStatement: variable ASSIGNMENT expression

   45 procedureStatement: ID PAREN_L actualParameterList PAREN_R

   46 apList: expression SEPARATOR apList
   47       | expression

   48 actualParameterList: apList
   49                    | /* empty */

   50 variable: ID componentSelection

   51 componentSelection: STOP ID componentSelection
   52                   | ARRAY_L expression ARRAY_R componentSelection
   53                   | /* empty */

   54 expression: simpleExpression relationalOp simpleExpression
   55           | simpleExpression

   56 sign: ADDOP
   57     | /* empty */

   58 simpleExpression: sign term addOpTerm

   59 addOpTerm: addOp term addOpTerm
   60          | /* empty */

   61 relationalOp: RELATIONAL
   62             | EQUALS

   63 mulOpFactor: mulOp factor mulOpFactor
   64            | /* empty */

   65 term: factor mulOpFactor

   66 factor: factorOptions

   67 factorOptions: INT
   68              | STRING_LITERAL
   69              | variable
   70              | functionReference
   71              | NOT factor
   72              | PAREN_L expression PAREN_R

   73 functionReference: ID PAREN_L actualParameterList PAREN_R

   74 addOp: ADDOP
   75      | OR

   76 mulOp: MULTIOP
   77      | MOD
   78      | AND

   79 typeDefinitions: TYPE multipleTypeDefs
   80                | /* empty */

   81 multipleTypeDefs: typeDefinition multipleTypeDefs
   82                 | /* empty */

   83 typeDefinition: ID EQUALS type EOL

   84 rec: RECORD

   85 type: ARRAY ARRAY_L INT RANGE INT ARRAY_R OF type
   86     | rec fieldList endOfBlock
   87     | ID

   88 fieldList: paramDeclare EOL fieldList
   89          | paramDeclare

   90 endOfBlock: END


Terminals, with rules where they appear

$end (0) 0
error (256)
AND (258) 78
BGN (259) 26
FORWARD (260) 19
DIV (261)
DO (262) 35 36 39 40
ELSE (263) 34 37
END (264) 90
FOR (265) 35 39
FUNC (266) 15
IF (267) 33 34 37
ARRAY (268) 85
MOD (269) 77
NOT (270) 71
OF (271) 85
OR (272) 75
PROCEDURE (273) 16
PROGRAM (274) 1
RECORD (275) 84
THEN (276) 33 34 37
TO (277) 35 39
TYPE (278) 79
VAR (279) 2
WHILE (280) 36 40
ADDOP (281) 56 74
MULTIOP (282) 76
RELATIONAL (283) 61
EQUALS (284) 62 83
STOP (285) 1 51
SEPARATOR (286) 8 46
DECLARE (287) 6 13 21
EOL (288) 1 4 5 10 11 13 17 22 27 83 88
ASSIGNMENT (289) 35 39 44
RANGE (290) 85
PAREN_L (291) 13 17 45 72 73
PAREN_R (292) 13 17 45 72 73
ARRAY_L (293) 52 85
ARRAY_R (294) 52 85
FLOAT (295)
INT (296) 67 85
ID (297) 1 7 13 14 17 35 39 45 50 51 73 83 87
STRING_LITERAL (298) 68


Nonterminals, with rules where they appear

$accept (44)
    on left: 0
program (45)
    on left: 1, on right: 0
variableDeclarations (46)
    on left: 2 3, on right: 1 20
multiVarDeclarations (47)
    on left: 4 5, on right: 2 4
variableDeclaration (48)
    on left: 6, on right: 4 5
identifierList (49)
    on left: 7, on right: 6 8 21
multiIds (50)
    on left: 8 9, on right: 7
subprogramDeclarations (51)
    on left: 10 11 12, on right: 1 10 11
functionDeclaration (52)
    on left: 13, on right: 11
resultType (53)
    on left: 14, on right: 13
func (54)
    on left: 15, on right: 13
proc (55)
    on left: 16, on right: 17
procedureDeclaration (56)
    on left: 17, on right: 10
blockOrForward (57)
    on left: 18 19, on right: 13 17
block (58)
    on left: 20, on right: 18
paramDeclare (59)
    on left: 21, on right: 22 23 88 89
paramList (60)
    on left: 22 23, on right: 22 24
formalParameterList (61)
    on left: 24 25, on right: 13 17
compoundStatement (62)
    on left: 26, on right: 1 20 31
statementSequence (63)
    on left: 27 28, on right: 26 27
statement (64)
    on left: 29 30, on right: 27 28 33
otherStatements (65)
    on left: 31 32, on right: 38
open (66)
    on left: 33 34 35 36, on right: 29 34 35 36
matched (67)
    on left: 37 38 39 40, on right: 30 34 37 39 40
simpleStatement (68)
    on left: 41 42 43, on right: 32
assignmentStatement (69)
    on left: 44, on right: 41
procedureStatement (70)
    on left: 45, on right: 42
apList (71)
    on left: 46 47, on right: 46 48
actualParameterList (72)
    on left: 48 49, on right: 45 73
variable (73)
    on left: 50, on right: 44 69
componentSelection (74)
    on left: 51 52 53, on right: 50 51 52
expression (75)
    on left: 54 55, on right: 33 34 35 36 37 39 40 44 46 47 52 72
sign (76)
    on left: 56 57, on right: 58
simpleExpression (77)
    on left: 58, on right: 54 55
addOpTerm (78)
    on left: 59 60, on right: 58 59
relationalOp (79)
    on left: 61 62, on right: 54
mulOpFactor (80)
    on left: 63 64, on right: 63 65
term (81)
    on left: 65, on right: 58 59
factor (82)
    on left: 66, on right: 63 65 71
factorOptions (83)
    on left: 67 68 69 70 71 72, on right: 66
functionReference (84)
    on left: 73, on right: 70
addOp (85)
    on left: 74 75, on right: 59
mulOp (86)
    on left: 76 77 78, on right: 63
typeDefinitions (87)
    on left: 79 80, on right: 1
multipleTypeDefs (88)
    on left: 81 82, on right: 79 81
typeDefinition (89)
    on left: 83, on right: 81
rec (90)
    on left: 84, on right: 86
type (91)
    on left: 85 86 87, on right: 6 21 83 85
fieldList (92)
    on left: 88 89, on right: 86 88
endOfBlock (93)
    on left: 90, on right: 26 86


state 0

    0 $accept: . program $end

    PROGRAM  shift, and go to state 1

    program  go to state 2


state 1

    1 program: PROGRAM . ID EOL typeDefinitions variableDeclarations subprogramDeclarations compoundStatement STOP

    ID  shift, and go to state 3


state 2

    0 $accept: program . $end

    $end  shift, and go to state 4


state 3

    1 program: PROGRAM ID . EOL typeDefinitions variableDeclarations subprogramDeclarations compoundStatement STOP

    EOL  shift, and go to state 5


state 4

    0 $accept: program $end .

    $default  accept


state 5

    1 program: PROGRAM ID EOL . typeDefinitions variableDeclarations subprogramDeclarations compoundStatement STOP

    TYPE  shift, and go to state 6

    $default  reduce using rule 80 (typeDefinitions)

    typeDefinitions  go to state 7


state 6

   79 typeDefinitions: TYPE . multipleTypeDefs

    ID  shift, and go to state 8

    $default  reduce using rule 82 (multipleTypeDefs)

    multipleTypeDefs  go to state 9
    typeDefinition    go to state 10


state 7

    1 program: PROGRAM ID EOL typeDefinitions . variableDeclarations subprogramDeclarations compoundStatement STOP

    VAR  shift, and go to state 11

    $default  reduce using rule 3 (variableDeclarations)

    variableDeclarations  go to state 12


state 8

   83 typeDefinition: ID . EQUALS type EOL

    EQUALS  shift, and go to state 13


state 9

   79 typeDefinitions: TYPE multipleTypeDefs .

    $default  reduce using rule 79 (typeDefinitions)


state 10

   81 multipleTypeDefs: typeDefinition . multipleTypeDefs

    ID  shift, and go to state 8

    $default  reduce using rule 82 (multipleTypeDefs)

    multipleTypeDefs  go to state 14
    typeDefinition    go to state 10


state 11

    2 variableDeclarations: VAR . multiVarDeclarations

    ID  shift, and go to state 15

    multiVarDeclarations  go to state 16
    variableDeclaration   go to state 17
    identifierList        go to state 18


state 12

    1 program: PROGRAM ID EOL typeDefinitions variableDeclarations . subprogramDeclarations compoundStatement STOP

    FUNC       shift, and go to state 19
    PROCEDURE  shift, and go to state 20

    $default  reduce using rule 12 (subprogramDeclarations)

    subprogramDeclarations  go to state 21
    functionDeclaration     go to state 22
    func                    go to state 23
    proc                    go to state 24
    procedureDeclaration    go to state 25


state 13

   83 typeDefinition: ID EQUALS . type EOL

    ARRAY   shift, and go to state 26
    RECORD  shift, and go to state 27
    ID      shift, and go to state 28

    rec   go to state 29
    type  go to state 30


state 14

   81 multipleTypeDefs: typeDefinition multipleTypeDefs .

    $default  reduce using rule 81 (multipleTypeDefs)


state 15

    7 identifierList: ID . multiIds

    SEPARATOR  shift, and go to state 31

    $default  reduce using rule 9 (multiIds)

    multiIds  go to state 32


state 16

    2 variableDeclarations: VAR multiVarDeclarations .

    $default  reduce using rule 2 (variableDeclarations)


state 17

    4 multiVarDeclarations: variableDeclaration . EOL multiVarDeclarations
    5                     | variableDeclaration . EOL

    EOL  shift, and go to state 33


state 18

    6 variableDeclaration: identifierList . DECLARE type

    DECLARE  shift, and go to state 34


state 19

   15 func: FUNC .

    $default  reduce using rule 15 (func)


state 20

   16 proc: PROCEDURE .

    $default  reduce using rule 16 (proc)


state 21

    1 program: PROGRAM ID EOL typeDefinitions variableDeclarations subprogramDeclarations . compoundStatement STOP

    BGN  shift, and go to state 35

    compoundStatement  go to state 36


state 22

   11 subprogramDeclarations: functionDeclaration . EOL subprogramDeclarations

    EOL  shift, and go to state 37


state 23

   13 functionDeclaration: func . ID PAREN_L formalParameterList PAREN_R DECLARE resultType EOL blockOrForward

    ID  shift, and go to state 38


state 24

   17 procedureDeclaration: proc . ID PAREN_L formalParameterList PAREN_R EOL blockOrForward

    ID  shift, and go to state 39


state 25

   10 subprogramDeclarations: procedureDeclaration . EOL subprogramDeclarations

    EOL  shift, and go to state 40


state 26

   85 type: ARRAY . ARRAY_L INT RANGE INT ARRAY_R OF type

    ARRAY_L  shift, and go to state 41


state 27

   84 rec: RECORD .

    $default  reduce using rule 84 (rec)


state 28

   87 type: ID .

    $default  reduce using rule 87 (type)


state 29

   86 type: rec . fieldList endOfBlock

    ID  shift, and go to state 15

    identifierList  go to state 42
    paramDeclare    go to state 43
    fieldList       go to state 44


state 30

   83 typeDefinition: ID EQUALS type . EOL

    EOL  shift, and go to state 45


state 31

    8 multiIds: SEPARATOR . identifierList

    ID  shift, and go to state 15

    identifierList  go to state 46


state 32

    7 identifierList: ID multiIds .

    $default  reduce using rule 7 (identifierList)


state 33

    4 multiVarDeclarations: variableDeclaration EOL . multiVarDeclarations
    5                     | variableDeclaration EOL .

    ID  shift, and go to state 15

    $default  reduce using rule 5 (multiVarDeclarations)

    multiVarDeclarations  go to state 47
    variableDeclaration   go to state 17
    identifierList        go to state 18


state 34

    6 variableDeclaration: identifierList DECLARE . type

    ARRAY   shift, and go to state 26
    RECORD  shift, and go to state 27
    ID      shift, and go to state 28

    rec   go to state 29
    type  go to state 48


state 35

   26 compoundStatement: BGN . statementSequence endOfBlock

    BGN    shift, and go to state 35
    FOR    shift, and go to state 49
    IF     shift, and go to state 50
    WHILE  shift, and go to state 51
    ID     shift, and go to state 52

    $default  reduce using rule 43 (simpleStatement)

    compoundStatement    go to state 53
    statementSequence    go to state 54
    statement            go to state 55
    otherStatements      go to state 56
    open                 go to state 57
    matched              go to state 58
    simpleStatement      go to state 59
    assignmentStatement  go to state 60
    procedureStatement   go to state 61
    variable             go to state 62


state 36

    1 program: PROGRAM ID EOL typeDefinitions variableDeclarations subprogramDeclarations compoundStatement . STOP

    STOP  shift, and go to state 63


state 37

   11 subprogramDeclarations: functionDeclaration EOL . subprogramDeclarations

    FUNC       shift, and go to state 19
    PROCEDURE  shift, and go to state 20

    $default  reduce using rule 12 (subprogramDeclarations)

    subprogramDeclarations  go to state 64
    functionDeclaration     go to state 22
    func                    go to state 23
    proc                    go to state 24
    procedureDeclaration    go to state 25


state 38

   13 functionDeclaration: func ID . PAREN_L formalParameterList PAREN_R DECLARE resultType EOL blockOrForward

    PAREN_L  shift, and go to state 65


state 39

   17 procedureDeclaration: proc ID . PAREN_L formalParameterList PAREN_R EOL blockOrForward

    PAREN_L  shift, and go to state 66


state 40

   10 subprogramDeclarations: procedureDeclaration EOL . subprogramDeclarations

    FUNC       shift, and go to state 19
    PROCEDURE  shift, and go to state 20

    $default  reduce using rule 12 (subprogramDeclarations)

    subprogramDeclarations  go to state 67
    functionDeclaration     go to state 22
    func                    go to state 23
    proc                    go to state 24
    procedureDeclaration    go to state 25


state 41

   85 type: ARRAY ARRAY_L . INT RANGE INT ARRAY_R OF type

    INT  shift, and go to state 68


state 42

   21 paramDeclare: identifierList . DECLARE type

    DECLARE  shift, and go to state 69


state 43

   88 fieldList: paramDeclare . EOL fieldList
   89          | paramDeclare .

    EOL  shift, and go to state 70

    $default  reduce using rule 89 (fieldList)


state 44

   86 type: rec fieldList . endOfBlock

    END  shift, and go to state 71

    endOfBlock  go to state 72


state 45

   83 typeDefinition: ID EQUALS type EOL .

    $default  reduce using rule 83 (typeDefinition)


state 46

    8 multiIds: SEPARATOR identifierList .

    $default  reduce using rule 8 (multiIds)


state 47

    4 multiVarDeclarations: variableDeclaration EOL multiVarDeclarations .

    $default  reduce using rule 4 (multiVarDeclarations)


state 48

    6 variableDeclaration: identifierList DECLARE type .

    $default  reduce using rule 6 (variableDeclaration)


state 49

   35 open: FOR . ID ASSIGNMENT expression TO expression DO open
   39 matched: FOR . ID ASSIGNMENT expression TO expression DO matched

    ID  shift, and go to state 73


state 50

   33 open: IF . expression THEN statement
   34     | IF . expression THEN matched ELSE open
   37 matched: IF . expression THEN matched ELSE matched

    ADDOP  shift, and go to state 74

    $default  reduce using rule 57 (sign)

    expression        go to state 75
    sign              go to state 76
    simpleExpression  go to state 77


state 51

   36 open: WHILE . expression DO open
   40 matched: WHILE . expression DO matched

    ADDOP  shift, and go to state 74

    $default  reduce using rule 57 (sign)

    expression        go to state 78
    sign              go to state 76
    simpleExpression  go to state 77


state 52

   45 procedureStatement: ID . PAREN_L actualParameterList PAREN_R
   50 variable: ID . componentSelection

    STOP     shift, and go to state 79
    PAREN_L  shift, and go to state 80
    ARRAY_L  shift, and go to state 81

    $default  reduce using rule 53 (componentSelection)

    componentSelection  go to state 82


state 53

   31 otherStatements: compoundStatement .

    $default  reduce using rule 31 (otherStatements)


state 54

   26 compoundStatement: BGN statementSequence . endOfBlock

    END  shift, and go to state 71

    endOfBlock  go to state 83


state 55

   27 statementSequence: statement . EOL statementSequence
   28                  | statement .

    EOL  shift, and go to state 84

    $default  reduce using rule 28 (statementSequence)


state 56

   38 matched: otherStatements .

    $default  reduce using rule 38 (matched)


state 57

   29 statement: open .

    $default  reduce using rule 29 (statement)


state 58

   30 statement: matched .

    $default  reduce using rule 30 (statement)


state 59

   32 otherStatements: simpleStatement .

    $default  reduce using rule 32 (otherStatements)


state 60

   41 simpleStatement: assignmentStatement .

    $default  reduce using rule 41 (simpleStatement)


state 61

   42 simpleStatement: procedureStatement .

    $default  reduce using rule 42 (simpleStatement)


state 62

   44 assignmentStatement: variable . ASSIGNMENT expression

    ASSIGNMENT  shift, and go to state 85


state 63

    1 program: PROGRAM ID EOL typeDefinitions variableDeclarations subprogramDeclarations compoundStatement STOP .

    $default  reduce using rule 1 (program)


state 64

   11 subprogramDeclarations: functionDeclaration EOL subprogramDeclarations .

    $default  reduce using rule 11 (subprogramDeclarations)


state 65

   13 functionDeclaration: func ID PAREN_L . formalParameterList PAREN_R DECLARE resultType EOL blockOrForward

    ID  shift, and go to state 15

    $default  reduce using rule 25 (formalParameterList)

    identifierList       go to state 42
    paramDeclare         go to state 86
    paramList            go to state 87
    formalParameterList  go to state 88


state 66

   17 procedureDeclaration: proc ID PAREN_L . formalParameterList PAREN_R EOL blockOrForward

    ID  shift, and go to state 15

    $default  reduce using rule 25 (formalParameterList)

    identifierList       go to state 42
    paramDeclare         go to state 86
    paramList            go to state 87
    formalParameterList  go to state 89


state 67

   10 subprogramDeclarations: procedureDeclaration EOL subprogramDeclarations .

    $default  reduce using rule 10 (subprogramDeclarations)


state 68

   85 type: ARRAY ARRAY_L INT . RANGE INT ARRAY_R OF type

    RANGE  shift, and go to state 90


state 69

   21 paramDeclare: identifierList DECLARE . type

    ARRAY   shift, and go to state 26
    RECORD  shift, and go to state 27
    ID      shift, and go to state 28

    rec   go to state 29
    type  go to state 91


state 70

   88 fieldList: paramDeclare EOL . fieldList

    ID  shift, and go to state 15

    identifierList  go to state 42
    paramDeclare    go to state 43
    fieldList       go to state 92


state 71

   90 endOfBlock: END .

    $default  reduce using rule 90 (endOfBlock)


state 72

   86 type: rec fieldList endOfBlock .

    $default  reduce using rule 86 (type)


state 73

   35 open: FOR ID . ASSIGNMENT expression TO expression DO open
   39 matched: FOR ID . ASSIGNMENT expression TO expression DO matched

    ASSIGNMENT  shift, and go to state 93


state 74

   56 sign: ADDOP .

    $default  reduce using rule 56 (sign)


state 75

   33 open: IF expression . THEN statement
   34     | IF expression . THEN matched ELSE open
   37 matched: IF expression . THEN matched ELSE matched

    THEN  shift, and go to state 94


state 76

   58 simpleExpression: sign . term addOpTerm

    NOT             shift, and go to state 95
    PAREN_L         shift, and go to state 96
    INT             shift, and go to state 97
    ID              shift, and go to state 98
    STRING_LITERAL  shift, and go to state 99

    variable           go to state 100
    term               go to state 101
    factor             go to state 102
    factorOptions      go to state 103
    functionReference  go to state 104


state 77

   54 expression: simpleExpression . relationalOp simpleExpression
   55           | simpleExpression .

    RELATIONAL  shift, and go to state 105
    EQUALS      shift, and go to state 106

    $default  reduce using rule 55 (expression)

    relationalOp  go to state 107


state 78

   36 open: WHILE expression . DO open
   40 matched: WHILE expression . DO matched

    DO  shift, and go to state 108


state 79

   51 componentSelection: STOP . ID componentSelection

    ID  shift, and go to state 109


state 80

   45 procedureStatement: ID PAREN_L . actualParameterList PAREN_R

    ADDOP  shift, and go to state 74

    PAREN_R   reduce using rule 49 (actualParameterList)
    $default  reduce using rule 57 (sign)

    apList               go to state 110
    actualParameterList  go to state 111
    expression           go to state 112
    sign                 go to state 76
    simpleExpression     go to state 77


state 81

   52 componentSelection: ARRAY_L . expression ARRAY_R componentSelection

    ADDOP  shift, and go to state 74

    $default  reduce using rule 57 (sign)

    expression        go to state 113
    sign              go to state 76
    simpleExpression  go to state 77


state 82

   50 variable: ID componentSelection .

    $default  reduce using rule 50 (variable)


state 83

   26 compoundStatement: BGN statementSequence endOfBlock .

    $default  reduce using rule 26 (compoundStatement)


state 84

   27 statementSequence: statement EOL . statementSequence

    BGN    shift, and go to state 35
    FOR    shift, and go to state 49
    IF     shift, and go to state 50
    WHILE  shift, and go to state 51
    ID     shift, and go to state 52

    $default  reduce using rule 43 (simpleStatement)

    compoundStatement    go to state 53
    statementSequence    go to state 114
    statement            go to state 55
    otherStatements      go to state 56
    open                 go to state 57
    matched              go to state 58
    simpleStatement      go to state 59
    assignmentStatement  go to state 60
    procedureStatement   go to state 61
    variable             go to state 62


state 85

   44 assignmentStatement: variable ASSIGNMENT . expression

    ADDOP  shift, and go to state 74

    $default  reduce using rule 57 (sign)

    expression        go to state 115
    sign              go to state 76
    simpleExpression  go to state 77


state 86

   23 paramList: paramDeclare .

    $default  reduce using rule 23 (paramList)


state 87

   22 paramList: paramList . EOL paramDeclare
   24 formalParameterList: paramList .

    EOL  shift, and go to state 116

    $default  reduce using rule 24 (formalParameterList)


state 88

   13 functionDeclaration: func ID PAREN_L formalParameterList . PAREN_R DECLARE resultType EOL blockOrForward

    PAREN_R  shift, and go to state 117


state 89

   17 procedureDeclaration: proc ID PAREN_L formalParameterList . PAREN_R EOL blockOrForward

    PAREN_R  shift, and go to state 118


state 90

   85 type: ARRAY ARRAY_L INT RANGE . INT ARRAY_R OF type

    INT  shift, and go to state 119


state 91

   21 paramDeclare: identifierList DECLARE type .

    $default  reduce using rule 21 (paramDeclare)


state 92

   88 fieldList: paramDeclare EOL fieldList .

    $default  reduce using rule 88 (fieldList)


state 93

   35 open: FOR ID ASSIGNMENT . expression TO expression DO open
   39 matched: FOR ID ASSIGNMENT . expression TO expression DO matched

    ADDOP  shift, and go to state 74

    $default  reduce using rule 57 (sign)

    expression        go to state 120
    sign              go to state 76
    simpleExpression  go to state 77


state 94

   33 open: IF expression THEN . statement
   34     | IF expression THEN . matched ELSE open
   37 matched: IF expression THEN . matched ELSE matched

    BGN    shift, and go to state 35
    FOR    shift, and go to state 49
    IF     shift, and go to state 50
    WHILE  shift, and go to state 51
    ID     shift, and go to state 52

    $default  reduce using rule 43 (simpleStatement)

    compoundStatement    go to state 53
    statement            go to state 121
    otherStatements      go to state 56
    open                 go to state 57
    matched              go to state 122
    simpleStatement      go to state 59
    assignmentStatement  go to state 60
    procedureStatement   go to state 61
    variable             go to state 62


state 95

   71 factorOptions: NOT . factor

    NOT             shift, and go to state 95
    PAREN_L         shift, and go to state 96
    INT             shift, and go to state 97
    ID              shift, and go to state 98
    STRING_LITERAL  shift, and go to state 99

    variable           go to state 100
    factor             go to state 123
    factorOptions      go to state 103
    functionReference  go to state 104


state 96

   72 factorOptions: PAREN_L . expression PAREN_R

    ADDOP  shift, and go to state 74

    $default  reduce using rule 57 (sign)

    expression        go to state 124
    sign              go to state 76
    simpleExpression  go to state 77


state 97

   67 factorOptions: INT .

    $default  reduce using rule 67 (factorOptions)


state 98

   50 variable: ID . componentSelection
   73 functionReference: ID . PAREN_L actualParameterList PAREN_R

    STOP     shift, and go to state 79
    PAREN_L  shift, and go to state 125
    ARRAY_L  shift, and go to state 81

    $default  reduce using rule 53 (componentSelection)

    componentSelection  go to state 82


state 99

   68 factorOptions: STRING_LITERAL .

    $default  reduce using rule 68 (factorOptions)


state 100

   69 factorOptions: variable .

    $default  reduce using rule 69 (factorOptions)


state 101

   58 simpleExpression: sign term . addOpTerm

    OR     shift, and go to state 126
    ADDOP  shift, and go to state 127

    $default  reduce using rule 60 (addOpTerm)

    addOpTerm  go to state 128
    addOp      go to state 129


state 102

   65 term: factor . mulOpFactor

    AND      shift, and go to state 130
    MOD      shift, and go to state 131
    MULTIOP  shift, and go to state 132

    $default  reduce using rule 64 (mulOpFactor)

    mulOpFactor  go to state 133
    mulOp        go to state 134


state 103

   66 factor: factorOptions .

    $default  reduce using rule 66 (factor)


state 104

   70 factorOptions: functionReference .

    $default  reduce using rule 70 (factorOptions)


state 105

   61 relationalOp: RELATIONAL .

    $default  reduce using rule 61 (relationalOp)


state 106

   62 relationalOp: EQUALS .

    $default  reduce using rule 62 (relationalOp)


state 107

   54 expression: simpleExpression relationalOp . simpleExpression

    ADDOP  shift, and go to state 74

    $default  reduce using rule 57 (sign)

    sign              go to state 76
    simpleExpression  go to state 135


state 108

   36 open: WHILE expression DO . open
   40 matched: WHILE expression DO . matched

    BGN    shift, and go to state 35
    FOR    shift, and go to state 49
    IF     shift, and go to state 50
    WHILE  shift, and go to state 51
    ID     shift, and go to state 52

    $default  reduce using rule 43 (simpleStatement)

    compoundStatement    go to state 53
    otherStatements      go to state 56
    open                 go to state 136
    matched              go to state 137
    simpleStatement      go to state 59
    assignmentStatement  go to state 60
    procedureStatement   go to state 61
    variable             go to state 62


state 109

   51 componentSelection: STOP ID . componentSelection

    STOP     shift, and go to state 79
    ARRAY_L  shift, and go to state 81

    $default  reduce using rule 53 (componentSelection)

    componentSelection  go to state 138


state 110

   48 actualParameterList: apList .

    $default  reduce using rule 48 (actualParameterList)


state 111

   45 procedureStatement: ID PAREN_L actualParameterList . PAREN_R

    PAREN_R  shift, and go to state 139


state 112

   46 apList: expression . SEPARATOR apList
   47       | expression .

    SEPARATOR  shift, and go to state 140

    $default  reduce using rule 47 (apList)


state 113

   52 componentSelection: ARRAY_L expression . ARRAY_R componentSelection

    ARRAY_R  shift, and go to state 141


state 114

   27 statementSequence: statement EOL statementSequence .

    $default  reduce using rule 27 (statementSequence)


state 115

   44 assignmentStatement: variable ASSIGNMENT expression .

    $default  reduce using rule 44 (assignmentStatement)


state 116

   22 paramList: paramList EOL . paramDeclare

    ID  shift, and go to state 15

    identifierList  go to state 42
    paramDeclare    go to state 142


state 117

   13 functionDeclaration: func ID PAREN_L formalParameterList PAREN_R . DECLARE resultType EOL blockOrForward

    DECLARE  shift, and go to state 143


state 118

   17 procedureDeclaration: proc ID PAREN_L formalParameterList PAREN_R . EOL blockOrForward

    EOL  shift, and go to state 144


state 119

   85 type: ARRAY ARRAY_L INT RANGE INT . ARRAY_R OF type

    ARRAY_R  shift, and go to state 145


state 120

   35 open: FOR ID ASSIGNMENT expression . TO expression DO open
   39 matched: FOR ID ASSIGNMENT expression . TO expression DO matched

    TO  shift, and go to state 146


state 121

   33 open: IF expression THEN statement .

    $default  reduce using rule 33 (open)


state 122

   30 statement: matched .
   34 open: IF expression THEN matched . ELSE open
   37 matched: IF expression THEN matched . ELSE matched

    ELSE  shift, and go to state 147

    $default  reduce using rule 30 (statement)


state 123

   71 factorOptions: NOT factor .

    $default  reduce using rule 71 (factorOptions)


state 124

   72 factorOptions: PAREN_L expression . PAREN_R

    PAREN_R  shift, and go to state 148


state 125

   73 functionReference: ID PAREN_L . actualParameterList PAREN_R

    ADDOP  shift, and go to state 74

    PAREN_R   reduce using rule 49 (actualParameterList)
    $default  reduce using rule 57 (sign)

    apList               go to state 110
    actualParameterList  go to state 149
    expression           go to state 112
    sign                 go to state 76
    simpleExpression     go to state 77


state 126

   75 addOp: OR .

    $default  reduce using rule 75 (addOp)


state 127

   74 addOp: ADDOP .

    $default  reduce using rule 74 (addOp)


state 128

   58 simpleExpression: sign term addOpTerm .

    $default  reduce using rule 58 (simpleExpression)


state 129

   59 addOpTerm: addOp . term addOpTerm

    NOT             shift, and go to state 95
    PAREN_L         shift, and go to state 96
    INT             shift, and go to state 97
    ID              shift, and go to state 98
    STRING_LITERAL  shift, and go to state 99

    variable           go to state 100
    term               go to state 150
    factor             go to state 102
    factorOptions      go to state 103
    functionReference  go to state 104


state 130

   78 mulOp: AND .

    $default  reduce using rule 78 (mulOp)


state 131

   77 mulOp: MOD .

    $default  reduce using rule 77 (mulOp)


state 132

   76 mulOp: MULTIOP .

    $default  reduce using rule 76 (mulOp)


state 133

   65 term: factor mulOpFactor .

    $default  reduce using rule 65 (term)


state 134

   63 mulOpFactor: mulOp . factor mulOpFactor

    NOT             shift, and go to state 95
    PAREN_L         shift, and go to state 96
    INT             shift, and go to state 97
    ID              shift, and go to state 98
    STRING_LITERAL  shift, and go to state 99

    variable           go to state 100
    factor             go to state 151
    factorOptions      go to state 103
    functionReference  go to state 104


state 135

   54 expression: simpleExpression relationalOp simpleExpression .

    $default  reduce using rule 54 (expression)


state 136

   36 open: WHILE expression DO open .

    $default  reduce using rule 36 (open)


state 137

   40 matched: WHILE expression DO matched .

    $default  reduce using rule 40 (matched)


state 138

   51 componentSelection: STOP ID componentSelection .

    $default  reduce using rule 51 (componentSelection)


state 139

   45 procedureStatement: ID PAREN_L actualParameterList PAREN_R .

    $default  reduce using rule 45 (procedureStatement)


state 140

   46 apList: expression SEPARATOR . apList

    ADDOP  shift, and go to state 74

    $default  reduce using rule 57 (sign)

    apList            go to state 152
    expression        go to state 112
    sign              go to state 76
    simpleExpression  go to state 77


state 141

   52 componentSelection: ARRAY_L expression ARRAY_R . componentSelection

    STOP     shift, and go to state 79
    ARRAY_L  shift, and go to state 81

    $default  reduce using rule 53 (componentSelection)

    componentSelection  go to state 153


state 142

   22 paramList: paramList EOL paramDeclare .

    $default  reduce using rule 22 (paramList)


state 143

   13 functionDeclaration: func ID PAREN_L formalParameterList PAREN_R DECLARE . resultType EOL blockOrForward

    ID  shift, and go to state 154

    resultType  go to state 155


state 144

   17 procedureDeclaration: proc ID PAREN_L formalParameterList PAREN_R EOL . blockOrForward

    FORWARD  shift, and go to state 156
    VAR      shift, and go to state 11

    $default  reduce using rule 3 (variableDeclarations)

    variableDeclarations  go to state 157
    blockOrForward        go to state 158
    block                 go to state 159


state 145

   85 type: ARRAY ARRAY_L INT RANGE INT ARRAY_R . OF type

    OF  shift, and go to state 160


state 146

   35 open: FOR ID ASSIGNMENT expression TO . expression DO open
   39 matched: FOR ID ASSIGNMENT expression TO . expression DO matched

    ADDOP  shift, and go to state 74

    $default  reduce using rule 57 (sign)

    expression        go to state 161
    sign              go to state 76
    simpleExpression  go to state 77


state 147

   34 open: IF expression THEN matched ELSE . open
   37 matched: IF expression THEN matched ELSE . matched

    BGN    shift, and go to state 35
    FOR    shift, and go to state 49
    IF     shift, and go to state 50
    WHILE  shift, and go to state 51
    ID     shift, and go to state 52

    $default  reduce using rule 43 (simpleStatement)

    compoundStatement    go to state 53
    otherStatements      go to state 56
    open                 go to state 162
    matched              go to state 163
    simpleStatement      go to state 59
    assignmentStatement  go to state 60
    procedureStatement   go to state 61
    variable             go to state 62


state 148

   72 factorOptions: PAREN_L expression PAREN_R .

    $default  reduce using rule 72 (factorOptions)


state 149

   73 functionReference: ID PAREN_L actualParameterList . PAREN_R

    PAREN_R  shift, and go to state 164


state 150

   59 addOpTerm: addOp term . addOpTerm

    OR     shift, and go to state 126
    ADDOP  shift, and go to state 127

    $default  reduce using rule 60 (addOpTerm)

    addOpTerm  go to state 165
    addOp      go to state 129


state 151

   63 mulOpFactor: mulOp factor . mulOpFactor

    AND      shift, and go to state 130
    MOD      shift, and go to state 131
    MULTIOP  shift, and go to state 132

    $default  reduce using rule 64 (mulOpFactor)

    mulOpFactor  go to state 166
    mulOp        go to state 134


state 152

   46 apList: expression SEPARATOR apList .

    $default  reduce using rule 46 (apList)


state 153

   52 componentSelection: ARRAY_L expression ARRAY_R componentSelection .

    $default  reduce using rule 52 (componentSelection)


state 154

   14 resultType: ID .

    $default  reduce using rule 14 (resultType)


state 155

   13 functionDeclaration: func ID PAREN_L formalParameterList PAREN_R DECLARE resultType . EOL blockOrForward

    EOL  shift, and go to state 167


state 156

   19 blockOrForward: FORWARD .

    $default  reduce using rule 19 (blockOrForward)


state 157

   20 block: variableDeclarations . compoundStatement

    BGN  shift, and go to state 35

    compoundStatement  go to state 168


state 158

   17 procedureDeclaration: proc ID PAREN_L formalParameterList PAREN_R EOL blockOrForward .

    $default  reduce using rule 17 (procedureDeclaration)


state 159

   18 blockOrForward: block .

    $default  reduce using rule 18 (blockOrForward)


state 160

   85 type: ARRAY ARRAY_L INT RANGE INT ARRAY_R OF . type

    ARRAY   shift, and go to state 26
    RECORD  shift, and go to state 27
    ID      shift, and go to state 28

    rec   go to state 29
    type  go to state 169


state 161

   35 open: FOR ID ASSIGNMENT expression TO expression . DO open
   39 matched: FOR ID ASSIGNMENT expression TO expression . DO matched

    DO  shift, and go to state 170


state 162

   34 open: IF expression THEN matched ELSE open .

    $default  reduce using rule 34 (open)


state 163

   37 matched: IF expression THEN matched ELSE matched .

    $default  reduce using rule 37 (matched)


state 164

   73 functionReference: ID PAREN_L actualParameterList PAREN_R .

    $default  reduce using rule 73 (functionReference)


state 165

   59 addOpTerm: addOp term addOpTerm .

    $default  reduce using rule 59 (addOpTerm)


state 166

   63 mulOpFactor: mulOp factor mulOpFactor .

    $default  reduce using rule 63 (mulOpFactor)


state 167

   13 functionDeclaration: func ID PAREN_L formalParameterList PAREN_R DECLARE resultType EOL . blockOrForward

    FORWARD  shift, and go to state 156
    VAR      shift, and go to state 11

    $default  reduce using rule 3 (variableDeclarations)

    variableDeclarations  go to state 157
    blockOrForward        go to state 171
    block                 go to state 159


state 168

   20 block: variableDeclarations compoundStatement .

    $default  reduce using rule 20 (block)


state 169

   85 type: ARRAY ARRAY_L INT RANGE INT ARRAY_R OF type .

    $default  reduce using rule 85 (type)


state 170

   35 open: FOR ID ASSIGNMENT expression TO expression DO . open
   39 matched: FOR ID ASSIGNMENT expression TO expression DO . matched

    BGN    shift, and go to state 35
    FOR    shift, and go to state 49
    IF     shift, and go to state 50
    WHILE  shift, and go to state 51
    ID     shift, and go to state 52

    $default  reduce using rule 43 (simpleStatement)

    compoundStatement    go to state 53
    otherStatements      go to state 56
    open                 go to state 172
    matched              go to state 173
    simpleStatement      go to state 59
    assignmentStatement  go to state 60
    procedureStatement   go to state 61
    variable             go to state 62


state 171

   13 functionDeclaration: func ID PAREN_L formalParameterList PAREN_R DECLARE resultType EOL blockOrForward .

    $default  reduce using rule 13 (functionDeclaration)


state 172

   35 open: FOR ID ASSIGNMENT expression TO expression DO open .

    $default  reduce using rule 35 (open)


state 173

   39 matched: FOR ID ASSIGNMENT expression TO expression DO matched .

    $default  reduce using rule 39 (matched)
