Terminals which are not used

   DIV
   FLOAT


Grammar

    0 $accept: program $end

    1 program: PROGRAM ID EOL typeDefinitions variableDeclarations subprogramDeclarations compoundStatement STOP

    2 variableDeclarations: VAR multiVarDeclarations
    3                     | /* empty */

    4 multiVarDeclarations: variableDeclaration EOL multiVarDeclarations
    5                     | variableDeclaration EOL

    6 variableDeclaration: identifierList DECLARE type

    7 identifierList: ID multiIds

    8 multiIds: SEPARATOR identifierList
    9         | /* empty */

   10 subprogramDeclarations: procedureDeclaration EOL subprogramDeclarations
   11                       | functionDeclaration EOL subprogramDeclarations
   12                       | /* empty */

   13 functionDeclaration: FUNC ID PAREN_L formalParameterList PAREN_R DECLARE resultType EOL blockOrForward

   14 resultType: ID

   15 procedureDeclaration: PROCEDURE ID PAREN_L formalParameterList PAREN_R EOL blockOrForward

   16 blockOrForward: block
   17               | FORWARD

   18 block: variableDeclarations compoundStatement

   19 paramDeclare: identifierList DECLARE type

   20 paramList: paramList EOL paramDeclare
   21          | paramDeclare

   22 formalParameterList: paramList
   23                    | /* empty */

   24 compoundStatement: BGN statementSequence END

   25 statementSequence: statement EOL statementSequence
   26                  | statement

   27 statement: open
   28          | matched

   29 otherStatements: compoundStatement
   30                | simpleStatement

   31 loopHeader: FOR ID ASSIGNMENT expression TO expression DO
   32           | WHILE expression DO

   33 open: IF expression THEN statement
   34     | IF expression THEN matched ELSE open
   35     | loopHeader open

   36 matched: IF expression THEN matched ELSE matched
   37        | otherStatements
   38        | loopHeader matched

   39 simpleStatement: assignmentStatement
   40                | procedureStatement
   41                | /* empty */

   42 assignmentStatement: variable ASSIGNMENT expression

   43 procedureStatement: ID PAREN_L actualParameterList PAREN_R

   44 apList: expression SEPARATOR apList
   45       | expression

   46 actualParameterList: apList
   47                    | /* empty */

   48 variable: ID componentSelection

   49 componentSelection: STOP ID componentSelection
   50                   | ARRAY_L expression ARRAY_R componentSelection
   51                   | /* empty */

   52 expression: simpleExpression relationalOp simpleExpression
   53           | simpleExpression

   54 addOpTerm: addOp term addOpTerm
   55          | /* empty */

   56 relationalOp: RELATIONAL
   57             | EQUALS

   58 mulOpFactor: mulOp factor mulOpFactor
   59            | /* empty */

   60 term: factor mulOpFactor

   61 factorOptions: INT
   62              | STRING_LITERAL
   63              | variable
   64              | functionReference
   65              | NOT factor
   66              | PAREN_L expression PAREN_R

   67 factor: factorOptions

   68 functionReference: ID PAREN_L actualParameterList PAREN_R

   69 simpleExpression: sign term addOpTerm

   70 addOp: ADDOP
   71      | OR

   72 mulOp: MULTIOP
   73      | MOD
   74      | AND

   75 sign: ADDOP
   76     | /* empty */

   77 typeDefinitions: TYPE multipleTypeDefs
   78                | /* empty */

   79 multipleTypeDefs: typeDefinition multipleTypeDefs
   80                 | /* empty */

   81 typeDefinition: ID EQUALS type EOL

   82 type: ARRAY ARRAY_L INT RANGE INT ARRAY_R OF type
   83     | RECORD fieldList END
   84     | ID

   85 fieldList: paramDeclare EOL fieldList
   86          | paramDeclare


Terminals, with rules where they appear

$end (0) 0
error (256)
AND (258) 74
BGN (259) 24
FORWARD (260) 17
DIV (261)
DO (262) 31 32
ELSE (263) 34 36
END (264) 24 83
FOR (265) 31
FUNC (266) 13
IF (267) 33 34 36
ARRAY (268) 82
MOD (269) 73
NOT (270) 65
OF (271) 82
OR (272) 71
PROCEDURE (273) 15
PROGRAM (274) 1
RECORD (275) 83
THEN (276) 33 34 36
TO (277) 31
TYPE (278) 77
VAR (279) 2
WHILE (280) 32
ADDOP (281) 70 75
MULTIOP (282) 72
RELATIONAL (283) 56
EQUALS (284) 57 81
STOP (285) 1 49
SEPARATOR (286) 8 44
DECLARE (287) 6 13 19
EOL (288) 1 4 5 10 11 13 15 20 25 81 85
ASSIGNMENT (289) 31 42
RANGE (290) 82
PAREN_L (291) 13 15 43 66 68
PAREN_R (292) 13 15 43 66 68
ARRAY_L (293) 50 82
ARRAY_R (294) 50 82
FLOAT (295)
INT (296) 61 82
ID (297) 1 7 13 14 15 31 43 48 49 68 81 84
STRING_LITERAL (298) 62


Nonterminals, with rules where they appear

$accept (44)
    on left: 0
program (45)
    on left: 1, on right: 0
variableDeclarations (46)
    on left: 2 3, on right: 1 18
multiVarDeclarations (47)
    on left: 4 5, on right: 2 4
variableDeclaration (48)
    on left: 6, on right: 4 5
identifierList (49)
    on left: 7, on right: 6 8 19
multiIds (50)
    on left: 8 9, on right: 7
subprogramDeclarations (51)
    on left: 10 11 12, on right: 1 10 11
functionDeclaration (52)
    on left: 13, on right: 11
resultType (53)
    on left: 14, on right: 13
procedureDeclaration (54)
    on left: 15, on right: 10
blockOrForward (55)
    on left: 16 17, on right: 13 15
block (56)
    on left: 18, on right: 16
paramDeclare (57)
    on left: 19, on right: 20 21 85 86
paramList (58)
    on left: 20 21, on right: 20 22
formalParameterList (59)
    on left: 22 23, on right: 13 15
compoundStatement (60)
    on left: 24, on right: 1 18 29
statementSequence (61)
    on left: 25 26, on right: 24 25
statement (62)
    on left: 27 28, on right: 25 26 33
otherStatements (63)
    on left: 29 30, on right: 37
loopHeader (64)
    on left: 31 32, on right: 35 38
open (65)
    on left: 33 34 35, on right: 27 34 35
matched (66)
    on left: 36 37 38, on right: 28 34 36 38
simpleStatement (67)
    on left: 39 40 41, on right: 30
assignmentStatement (68)
    on left: 42, on right: 39
procedureStatement (69)
    on left: 43, on right: 40
apList (70)
    on left: 44 45, on right: 44 46
actualParameterList (71)
    on left: 46 47, on right: 43 68
variable (72)
    on left: 48, on right: 42 63
componentSelection (73)
    on left: 49 50 51, on right: 48 49 50
expression (74)
    on left: 52 53, on right: 31 32 33 34 36 42 44 45 50 66
addOpTerm (75)
    on left: 54 55, on right: 54 69
relationalOp (76)
    on left: 56 57, on right: 52
mulOpFactor (77)
    on left: 58 59, on right: 58 60
term (78)
    on left: 60, on right: 54 69
factorOptions (79)
    on left: 61 62 63 64 65 66, on right: 67
factor (80)
    on left: 67, on right: 58 60 65
functionReference (81)
    on left: 68, on right: 64
simpleExpression (82)
    on left: 69, on right: 52 53
addOp (83)
    on left: 70 71, on right: 54
mulOp (84)
    on left: 72 73 74, on right: 58
sign (85)
    on left: 75 76, on right: 69
typeDefinitions (86)
    on left: 77 78, on right: 1
multipleTypeDefs (87)
    on left: 79 80, on right: 77 79
typeDefinition (88)
    on left: 81, on right: 79
type (89)
    on left: 82 83 84, on right: 6 19 81 82
fieldList (90)
    on left: 85 86, on right: 83 85


state 0

    0 $accept: . program $end

    PROGRAM  shift, and go to state 1

    program  go to state 2


state 1

    1 program: PROGRAM . ID EOL typeDefinitions variableDeclarations subprogramDeclarations compoundStatement STOP

    ID  shift, and go to state 3


state 2

    0 $accept: program . $end

    $end  shift, and go to state 4


state 3

    1 program: PROGRAM ID . EOL typeDefinitions variableDeclarations subprogramDeclarations compoundStatement STOP

    EOL  shift, and go to state 5


state 4

    0 $accept: program $end .

    $default  accept


state 5

    1 program: PROGRAM ID EOL . typeDefinitions variableDeclarations subprogramDeclarations compoundStatement STOP

    TYPE  shift, and go to state 6

    $default  reduce using rule 78 (typeDefinitions)

    typeDefinitions  go to state 7


state 6

   77 typeDefinitions: TYPE . multipleTypeDefs

    ID  shift, and go to state 8

    $default  reduce using rule 80 (multipleTypeDefs)

    multipleTypeDefs  go to state 9
    typeDefinition    go to state 10


state 7

    1 program: PROGRAM ID EOL typeDefinitions . variableDeclarations subprogramDeclarations compoundStatement STOP

    VAR  shift, and go to state 11

    $default  reduce using rule 3 (variableDeclarations)

    variableDeclarations  go to state 12


state 8

   81 typeDefinition: ID . EQUALS type EOL

    EQUALS  shift, and go to state 13


state 9

   77 typeDefinitions: TYPE multipleTypeDefs .

    $default  reduce using rule 77 (typeDefinitions)


state 10

   79 multipleTypeDefs: typeDefinition . multipleTypeDefs

    ID  shift, and go to state 8

    $default  reduce using rule 80 (multipleTypeDefs)

    multipleTypeDefs  go to state 14
    typeDefinition    go to state 10


state 11

    2 variableDeclarations: VAR . multiVarDeclarations

    ID  shift, and go to state 15

    multiVarDeclarations  go to state 16
    variableDeclaration   go to state 17
    identifierList        go to state 18


state 12

    1 program: PROGRAM ID EOL typeDefinitions variableDeclarations . subprogramDeclarations compoundStatement STOP

    FUNC       shift, and go to state 19
    PROCEDURE  shift, and go to state 20

    $default  reduce using rule 12 (subprogramDeclarations)

    subprogramDeclarations  go to state 21
    functionDeclaration     go to state 22
    procedureDeclaration    go to state 23


state 13

   81 typeDefinition: ID EQUALS . type EOL

    ARRAY   shift, and go to state 24
    RECORD  shift, and go to state 25
    ID      shift, and go to state 26

    type  go to state 27


state 14

   79 multipleTypeDefs: typeDefinition multipleTypeDefs .

    $default  reduce using rule 79 (multipleTypeDefs)


state 15

    7 identifierList: ID . multiIds

    SEPARATOR  shift, and go to state 28

    $default  reduce using rule 9 (multiIds)

    multiIds  go to state 29


state 16

    2 variableDeclarations: VAR multiVarDeclarations .

    $default  reduce using rule 2 (variableDeclarations)


state 17

    4 multiVarDeclarations: variableDeclaration . EOL multiVarDeclarations
    5                     | variableDeclaration . EOL

    EOL  shift, and go to state 30


state 18

    6 variableDeclaration: identifierList . DECLARE type

    DECLARE  shift, and go to state 31


state 19

   13 functionDeclaration: FUNC . ID PAREN_L formalParameterList PAREN_R DECLARE resultType EOL blockOrForward

    ID  shift, and go to state 32


state 20

   15 procedureDeclaration: PROCEDURE . ID PAREN_L formalParameterList PAREN_R EOL blockOrForward

    ID  shift, and go to state 33


state 21

    1 program: PROGRAM ID EOL typeDefinitions variableDeclarations subprogramDeclarations . compoundStatement STOP

    BGN  shift, and go to state 34

    compoundStatement  go to state 35


state 22

   11 subprogramDeclarations: functionDeclaration . EOL subprogramDeclarations

    EOL  shift, and go to state 36


state 23

   10 subprogramDeclarations: procedureDeclaration . EOL subprogramDeclarations

    EOL  shift, and go to state 37


state 24

   82 type: ARRAY . ARRAY_L INT RANGE INT ARRAY_R OF type

    ARRAY_L  shift, and go to state 38


state 25

   83 type: RECORD . fieldList END

    ID  shift, and go to state 15

    identifierList  go to state 39
    paramDeclare    go to state 40
    fieldList       go to state 41


state 26

   84 type: ID .

    $default  reduce using rule 84 (type)


state 27

   81 typeDefinition: ID EQUALS type . EOL

    EOL  shift, and go to state 42


state 28

    8 multiIds: SEPARATOR . identifierList

    ID  shift, and go to state 15

    identifierList  go to state 43


state 29

    7 identifierList: ID multiIds .

    $default  reduce using rule 7 (identifierList)


state 30

    4 multiVarDeclarations: variableDeclaration EOL . multiVarDeclarations
    5                     | variableDeclaration EOL .

    ID  shift, and go to state 15

    $default  reduce using rule 5 (multiVarDeclarations)

    multiVarDeclarations  go to state 44
    variableDeclaration   go to state 17
    identifierList        go to state 18


state 31

    6 variableDeclaration: identifierList DECLARE . type

    ARRAY   shift, and go to state 24
    RECORD  shift, and go to state 25
    ID      shift, and go to state 26

    type  go to state 45


state 32

   13 functionDeclaration: FUNC ID . PAREN_L formalParameterList PAREN_R DECLARE resultType EOL blockOrForward

    PAREN_L  shift, and go to state 46


state 33

   15 procedureDeclaration: PROCEDURE ID . PAREN_L formalParameterList PAREN_R EOL blockOrForward

    PAREN_L  shift, and go to state 47


state 34

   24 compoundStatement: BGN . statementSequence END

    BGN    shift, and go to state 34
    FOR    shift, and go to state 48
    IF     shift, and go to state 49
    WHILE  shift, and go to state 50
    ID     shift, and go to state 51

    $default  reduce using rule 41 (simpleStatement)

    compoundStatement    go to state 52
    statementSequence    go to state 53
    statement            go to state 54
    otherStatements      go to state 55
    loopHeader           go to state 56
    open                 go to state 57
    matched              go to state 58
    simpleStatement      go to state 59
    assignmentStatement  go to state 60
    procedureStatement   go to state 61
    variable             go to state 62


state 35

    1 program: PROGRAM ID EOL typeDefinitions variableDeclarations subprogramDeclarations compoundStatement . STOP

    STOP  shift, and go to state 63


state 36

   11 subprogramDeclarations: functionDeclaration EOL . subprogramDeclarations

    FUNC       shift, and go to state 19
    PROCEDURE  shift, and go to state 20

    $default  reduce using rule 12 (subprogramDeclarations)

    subprogramDeclarations  go to state 64
    functionDeclaration     go to state 22
    procedureDeclaration    go to state 23


state 37

   10 subprogramDeclarations: procedureDeclaration EOL . subprogramDeclarations

    FUNC       shift, and go to state 19
    PROCEDURE  shift, and go to state 20

    $default  reduce using rule 12 (subprogramDeclarations)

    subprogramDeclarations  go to state 65
    functionDeclaration     go to state 22
    procedureDeclaration    go to state 23


state 38

   82 type: ARRAY ARRAY_L . INT RANGE INT ARRAY_R OF type

    INT  shift, and go to state 66


state 39

   19 paramDeclare: identifierList . DECLARE type

    DECLARE  shift, and go to state 67


state 40

   85 fieldList: paramDeclare . EOL fieldList
   86          | paramDeclare .

    EOL  shift, and go to state 68

    $default  reduce using rule 86 (fieldList)


state 41

   83 type: RECORD fieldList . END

    END  shift, and go to state 69


state 42

   81 typeDefinition: ID EQUALS type EOL .

    $default  reduce using rule 81 (typeDefinition)


state 43

    8 multiIds: SEPARATOR identifierList .

    $default  reduce using rule 8 (multiIds)


state 44

    4 multiVarDeclarations: variableDeclaration EOL multiVarDeclarations .

    $default  reduce using rule 4 (multiVarDeclarations)


state 45

    6 variableDeclaration: identifierList DECLARE type .

    $default  reduce using rule 6 (variableDeclaration)


state 46

   13 functionDeclaration: FUNC ID PAREN_L . formalParameterList PAREN_R DECLARE resultType EOL blockOrForward

    ID  shift, and go to state 15

    $default  reduce using rule 23 (formalParameterList)

    identifierList       go to state 39
    paramDeclare         go to state 70
    paramList            go to state 71
    formalParameterList  go to state 72


state 47

   15 procedureDeclaration: PROCEDURE ID PAREN_L . formalParameterList PAREN_R EOL blockOrForward

    ID  shift, and go to state 15

    $default  reduce using rule 23 (formalParameterList)

    identifierList       go to state 39
    paramDeclare         go to state 70
    paramList            go to state 71
    formalParameterList  go to state 73


state 48

   31 loopHeader: FOR . ID ASSIGNMENT expression TO expression DO

    ID  shift, and go to state 74


state 49

   33 open: IF . expression THEN statement
   34     | IF . expression THEN matched ELSE open
   36 matched: IF . expression THEN matched ELSE matched

    ADDOP  shift, and go to state 75

    $default  reduce using rule 76 (sign)

    expression        go to state 76
    simpleExpression  go to state 77
    sign              go to state 78


state 50

   32 loopHeader: WHILE . expression DO

    ADDOP  shift, and go to state 75

    $default  reduce using rule 76 (sign)

    expression        go to state 79
    simpleExpression  go to state 77
    sign              go to state 78


state 51

   43 procedureStatement: ID . PAREN_L actualParameterList PAREN_R
   48 variable: ID . componentSelection

    STOP     shift, and go to state 80
    PAREN_L  shift, and go to state 81
    ARRAY_L  shift, and go to state 82

    $default  reduce using rule 51 (componentSelection)

    componentSelection  go to state 83


state 52

   29 otherStatements: compoundStatement .

    $default  reduce using rule 29 (otherStatements)


state 53

   24 compoundStatement: BGN statementSequence . END

    END  shift, and go to state 84


state 54

   25 statementSequence: statement . EOL statementSequence
   26                  | statement .

    EOL  shift, and go to state 85

    $default  reduce using rule 26 (statementSequence)


state 55

   37 matched: otherStatements .

    $default  reduce using rule 37 (matched)


state 56

   35 open: loopHeader . open
   38 matched: loopHeader . matched

    BGN    shift, and go to state 34
    FOR    shift, and go to state 48
    IF     shift, and go to state 49
    WHILE  shift, and go to state 50
    ID     shift, and go to state 51

    $default  reduce using rule 41 (simpleStatement)

    compoundStatement    go to state 52
    otherStatements      go to state 55
    loopHeader           go to state 56
    open                 go to state 86
    matched              go to state 87
    simpleStatement      go to state 59
    assignmentStatement  go to state 60
    procedureStatement   go to state 61
    variable             go to state 62


state 57

   27 statement: open .

    $default  reduce using rule 27 (statement)


state 58

   28 statement: matched .

    $default  reduce using rule 28 (statement)


state 59

   30 otherStatements: simpleStatement .

    $default  reduce using rule 30 (otherStatements)


state 60

   39 simpleStatement: assignmentStatement .

    $default  reduce using rule 39 (simpleStatement)


state 61

   40 simpleStatement: procedureStatement .

    $default  reduce using rule 40 (simpleStatement)


state 62

   42 assignmentStatement: variable . ASSIGNMENT expression

    ASSIGNMENT  shift, and go to state 88


state 63

    1 program: PROGRAM ID EOL typeDefinitions variableDeclarations subprogramDeclarations compoundStatement STOP .

    $default  reduce using rule 1 (program)


state 64

   11 subprogramDeclarations: functionDeclaration EOL subprogramDeclarations .

    $default  reduce using rule 11 (subprogramDeclarations)


state 65

   10 subprogramDeclarations: procedureDeclaration EOL subprogramDeclarations .

    $default  reduce using rule 10 (subprogramDeclarations)


state 66

   82 type: ARRAY ARRAY_L INT . RANGE INT ARRAY_R OF type

    RANGE  shift, and go to state 89


state 67

   19 paramDeclare: identifierList DECLARE . type

    ARRAY   shift, and go to state 24
    RECORD  shift, and go to state 25
    ID      shift, and go to state 26

    type  go to state 90


state 68

   85 fieldList: paramDeclare EOL . fieldList

    ID  shift, and go to state 15

    identifierList  go to state 39
    paramDeclare    go to state 40
    fieldList       go to state 91


state 69

   83 type: RECORD fieldList END .

    $default  reduce using rule 83 (type)


state 70

   21 paramList: paramDeclare .

    $default  reduce using rule 21 (paramList)


state 71

   20 paramList: paramList . EOL paramDeclare
   22 formalParameterList: paramList .

    EOL  shift, and go to state 92

    $default  reduce using rule 22 (formalParameterList)


state 72

   13 functionDeclaration: FUNC ID PAREN_L formalParameterList . PAREN_R DECLARE resultType EOL blockOrForward

    PAREN_R  shift, and go to state 93


state 73

   15 procedureDeclaration: PROCEDURE ID PAREN_L formalParameterList . PAREN_R EOL blockOrForward

    PAREN_R  shift, and go to state 94


state 74

   31 loopHeader: FOR ID . ASSIGNMENT expression TO expression DO

    ASSIGNMENT  shift, and go to state 95


state 75

   75 sign: ADDOP .

    $default  reduce using rule 75 (sign)


state 76

   33 open: IF expression . THEN statement
   34     | IF expression . THEN matched ELSE open
   36 matched: IF expression . THEN matched ELSE matched

    THEN  shift, and go to state 96


state 77

   52 expression: simpleExpression . relationalOp simpleExpression
   53           | simpleExpression .

    RELATIONAL  shift, and go to state 97
    EQUALS      shift, and go to state 98

    $default  reduce using rule 53 (expression)

    relationalOp  go to state 99


state 78

   69 simpleExpression: sign . term addOpTerm

    NOT             shift, and go to state 100
    PAREN_L         shift, and go to state 101
    INT             shift, and go to state 102
    ID              shift, and go to state 103
    STRING_LITERAL  shift, and go to state 104

    variable           go to state 105
    term               go to state 106
    factorOptions      go to state 107
    factor             go to state 108
    functionReference  go to state 109


state 79

   32 loopHeader: WHILE expression . DO

    DO  shift, and go to state 110


state 80

   49 componentSelection: STOP . ID componentSelection

    ID  shift, and go to state 111


state 81

   43 procedureStatement: ID PAREN_L . actualParameterList PAREN_R

    ADDOP  shift, and go to state 75

    PAREN_R   reduce using rule 47 (actualParameterList)
    $default  reduce using rule 76 (sign)

    apList               go to state 112
    actualParameterList  go to state 113
    expression           go to state 114
    simpleExpression     go to state 77
    sign                 go to state 78


state 82

   50 componentSelection: ARRAY_L . expression ARRAY_R componentSelection

    ADDOP  shift, and go to state 75

    $default  reduce using rule 76 (sign)

    expression        go to state 115
    simpleExpression  go to state 77
    sign              go to state 78


state 83

   48 variable: ID componentSelection .

    $default  reduce using rule 48 (variable)


state 84

   24 compoundStatement: BGN statementSequence END .

    $default  reduce using rule 24 (compoundStatement)


state 85

   25 statementSequence: statement EOL . statementSequence

    BGN    shift, and go to state 34
    FOR    shift, and go to state 48
    IF     shift, and go to state 49
    WHILE  shift, and go to state 50
    ID     shift, and go to state 51

    $default  reduce using rule 41 (simpleStatement)

    compoundStatement    go to state 52
    statementSequence    go to state 116
    statement            go to state 54
    otherStatements      go to state 55
    loopHeader           go to state 56
    open                 go to state 57
    matched              go to state 58
    simpleStatement      go to state 59
    assignmentStatement  go to state 60
    procedureStatement   go to state 61
    variable             go to state 62


state 86

   35 open: loopHeader open .

    $default  reduce using rule 35 (open)


state 87

   38 matched: loopHeader matched .

    $default  reduce using rule 38 (matched)


state 88

   42 assignmentStatement: variable ASSIGNMENT . expression

    ADDOP  shift, and go to state 75

    $default  reduce using rule 76 (sign)

    expression        go to state 117
    simpleExpression  go to state 77
    sign              go to state 78


state 89

   82 type: ARRAY ARRAY_L INT RANGE . INT ARRAY_R OF type

    INT  shift, and go to state 118


state 90

   19 paramDeclare: identifierList DECLARE type .

    $default  reduce using rule 19 (paramDeclare)


state 91

   85 fieldList: paramDeclare EOL fieldList .

    $default  reduce using rule 85 (fieldList)


state 92

   20 paramList: paramList EOL . paramDeclare

    ID  shift, and go to state 15

    identifierList  go to state 39
    paramDeclare    go to state 119


state 93

   13 functionDeclaration: FUNC ID PAREN_L formalParameterList PAREN_R . DECLARE resultType EOL blockOrForward

    DECLARE  shift, and go to state 120


state 94

   15 procedureDeclaration: PROCEDURE ID PAREN_L formalParameterList PAREN_R . EOL blockOrForward

    EOL  shift, and go to state 121


state 95

   31 loopHeader: FOR ID ASSIGNMENT . expression TO expression DO

    ADDOP  shift, and go to state 75

    $default  reduce using rule 76 (sign)

    expression        go to state 122
    simpleExpression  go to state 77
    sign              go to state 78


state 96

   33 open: IF expression THEN . statement
   34     | IF expression THEN . matched ELSE open
   36 matched: IF expression THEN . matched ELSE matched

    BGN    shift, and go to state 34
    FOR    shift, and go to state 48
    IF     shift, and go to state 49
    WHILE  shift, and go to state 50
    ID     shift, and go to state 51

    $default  reduce using rule 41 (simpleStatement)

    compoundStatement    go to state 52
    statement            go to state 123
    otherStatements      go to state 55
    loopHeader           go to state 56
    open                 go to state 57
    matched              go to state 124
    simpleStatement      go to state 59
    assignmentStatement  go to state 60
    procedureStatement   go to state 61
    variable             go to state 62


state 97

   56 relationalOp: RELATIONAL .

    $default  reduce using rule 56 (relationalOp)


state 98

   57 relationalOp: EQUALS .

    $default  reduce using rule 57 (relationalOp)


state 99

   52 expression: simpleExpression relationalOp . simpleExpression

    ADDOP  shift, and go to state 75

    $default  reduce using rule 76 (sign)

    simpleExpression  go to state 125
    sign              go to state 78


state 100

   65 factorOptions: NOT . factor

    NOT             shift, and go to state 100
    PAREN_L         shift, and go to state 101
    INT             shift, and go to state 102
    ID              shift, and go to state 103
    STRING_LITERAL  shift, and go to state 104

    variable           go to state 105
    factorOptions      go to state 107
    factor             go to state 126
    functionReference  go to state 109


state 101

   66 factorOptions: PAREN_L . expression PAREN_R

    ADDOP  shift, and go to state 75

    $default  reduce using rule 76 (sign)

    expression        go to state 127
    simpleExpression  go to state 77
    sign              go to state 78


state 102

   61 factorOptions: INT .

    $default  reduce using rule 61 (factorOptions)


state 103

   48 variable: ID . componentSelection
   68 functionReference: ID . PAREN_L actualParameterList PAREN_R

    STOP     shift, and go to state 80
    PAREN_L  shift, and go to state 128
    ARRAY_L  shift, and go to state 82

    $default  reduce using rule 51 (componentSelection)

    componentSelection  go to state 83


state 104

   62 factorOptions: STRING_LITERAL .

    $default  reduce using rule 62 (factorOptions)


state 105

   63 factorOptions: variable .

    $default  reduce using rule 63 (factorOptions)


state 106

   69 simpleExpression: sign term . addOpTerm

    OR     shift, and go to state 129
    ADDOP  shift, and go to state 130

    $default  reduce using rule 55 (addOpTerm)

    addOpTerm  go to state 131
    addOp      go to state 132


state 107

   67 factor: factorOptions .

    $default  reduce using rule 67 (factor)


state 108

   60 term: factor . mulOpFactor

    AND      shift, and go to state 133
    MOD      shift, and go to state 134
    MULTIOP  shift, and go to state 135

    $default  reduce using rule 59 (mulOpFactor)

    mulOpFactor  go to state 136
    mulOp        go to state 137


state 109

   64 factorOptions: functionReference .

    $default  reduce using rule 64 (factorOptions)


state 110

   32 loopHeader: WHILE expression DO .

    $default  reduce using rule 32 (loopHeader)


state 111

   49 componentSelection: STOP ID . componentSelection

    STOP     shift, and go to state 80
    ARRAY_L  shift, and go to state 82

    $default  reduce using rule 51 (componentSelection)

    componentSelection  go to state 138


state 112

   46 actualParameterList: apList .

    $default  reduce using rule 46 (actualParameterList)


state 113

   43 procedureStatement: ID PAREN_L actualParameterList . PAREN_R

    PAREN_R  shift, and go to state 139


state 114

   44 apList: expression . SEPARATOR apList
   45       | expression .

    SEPARATOR  shift, and go to state 140

    $default  reduce using rule 45 (apList)


state 115

   50 componentSelection: ARRAY_L expression . ARRAY_R componentSelection

    ARRAY_R  shift, and go to state 141


state 116

   25 statementSequence: statement EOL statementSequence .

    $default  reduce using rule 25 (statementSequence)


state 117

   42 assignmentStatement: variable ASSIGNMENT expression .

    $default  reduce using rule 42 (assignmentStatement)


state 118

   82 type: ARRAY ARRAY_L INT RANGE INT . ARRAY_R OF type

    ARRAY_R  shift, and go to state 142


state 119

   20 paramList: paramList EOL paramDeclare .

    $default  reduce using rule 20 (paramList)


state 120

   13 functionDeclaration: FUNC ID PAREN_L formalParameterList PAREN_R DECLARE . resultType EOL blockOrForward

    ID  shift, and go to state 143

    resultType  go to state 144


state 121

   15 procedureDeclaration: PROCEDURE ID PAREN_L formalParameterList PAREN_R EOL . blockOrForward

    FORWARD  shift, and go to state 145
    VAR      shift, and go to state 11

    $default  reduce using rule 3 (variableDeclarations)

    variableDeclarations  go to state 146
    blockOrForward        go to state 147
    block                 go to state 148


state 122

   31 loopHeader: FOR ID ASSIGNMENT expression . TO expression DO

    TO  shift, and go to state 149


state 123

   33 open: IF expression THEN statement .

    $default  reduce using rule 33 (open)


state 124

   28 statement: matched .
   34 open: IF expression THEN matched . ELSE open
   36 matched: IF expression THEN matched . ELSE matched

    ELSE  shift, and go to state 150

    $default  reduce using rule 28 (statement)


state 125

   52 expression: simpleExpression relationalOp simpleExpression .

    $default  reduce using rule 52 (expression)


state 126

   65 factorOptions: NOT factor .

    $default  reduce using rule 65 (factorOptions)


state 127

   66 factorOptions: PAREN_L expression . PAREN_R

    PAREN_R  shift, and go to state 151


state 128

   68 functionReference: ID PAREN_L . actualParameterList PAREN_R

    ADDOP  shift, and go to state 75

    PAREN_R   reduce using rule 47 (actualParameterList)
    $default  reduce using rule 76 (sign)

    apList               go to state 112
    actualParameterList  go to state 152
    expression           go to state 114
    simpleExpression     go to state 77
    sign                 go to state 78


state 129

   71 addOp: OR .

    $default  reduce using rule 71 (addOp)


state 130

   70 addOp: ADDOP .

    $default  reduce using rule 70 (addOp)


state 131

   69 simpleExpression: sign term addOpTerm .

    $default  reduce using rule 69 (simpleExpression)


state 132

   54 addOpTerm: addOp . term addOpTerm

    NOT             shift, and go to state 100
    PAREN_L         shift, and go to state 101
    INT             shift, and go to state 102
    ID              shift, and go to state 103
    STRING_LITERAL  shift, and go to state 104

    variable           go to state 105
    term               go to state 153
    factorOptions      go to state 107
    factor             go to state 108
    functionReference  go to state 109


state 133

   74 mulOp: AND .

    $default  reduce using rule 74 (mulOp)


state 134

   73 mulOp: MOD .

    $default  reduce using rule 73 (mulOp)


state 135

   72 mulOp: MULTIOP .

    $default  reduce using rule 72 (mulOp)


state 136

   60 term: factor mulOpFactor .

    $default  reduce using rule 60 (term)


state 137

   58 mulOpFactor: mulOp . factor mulOpFactor

    NOT             shift, and go to state 100
    PAREN_L         shift, and go to state 101
    INT             shift, and go to state 102
    ID              shift, and go to state 103
    STRING_LITERAL  shift, and go to state 104

    variable           go to state 105
    factorOptions      go to state 107
    factor             go to state 154
    functionReference  go to state 109


state 138

   49 componentSelection: STOP ID componentSelection .

    $default  reduce using rule 49 (componentSelection)


state 139

   43 procedureStatement: ID PAREN_L actualParameterList PAREN_R .

    $default  reduce using rule 43 (procedureStatement)


state 140

   44 apList: expression SEPARATOR . apList

    ADDOP  shift, and go to state 75

    $default  reduce using rule 76 (sign)

    apList            go to state 155
    expression        go to state 114
    simpleExpression  go to state 77
    sign              go to state 78


state 141

   50 componentSelection: ARRAY_L expression ARRAY_R . componentSelection

    STOP     shift, and go to state 80
    ARRAY_L  shift, and go to state 82

    $default  reduce using rule 51 (componentSelection)

    componentSelection  go to state 156


state 142

   82 type: ARRAY ARRAY_L INT RANGE INT ARRAY_R . OF type

    OF  shift, and go to state 157


state 143

   14 resultType: ID .

    $default  reduce using rule 14 (resultType)


state 144

   13 functionDeclaration: FUNC ID PAREN_L formalParameterList PAREN_R DECLARE resultType . EOL blockOrForward

    EOL  shift, and go to state 158


state 145

   17 blockOrForward: FORWARD .

    $default  reduce using rule 17 (blockOrForward)


state 146

   18 block: variableDeclarations . compoundStatement

    BGN  shift, and go to state 34

    compoundStatement  go to state 159


state 147

   15 procedureDeclaration: PROCEDURE ID PAREN_L formalParameterList PAREN_R EOL blockOrForward .

    $default  reduce using rule 15 (procedureDeclaration)


state 148

   16 blockOrForward: block .

    $default  reduce using rule 16 (blockOrForward)


state 149

   31 loopHeader: FOR ID ASSIGNMENT expression TO . expression DO

    ADDOP  shift, and go to state 75

    $default  reduce using rule 76 (sign)

    expression        go to state 160
    simpleExpression  go to state 77
    sign              go to state 78


state 150

   34 open: IF expression THEN matched ELSE . open
   36 matched: IF expression THEN matched ELSE . matched

    BGN    shift, and go to state 34
    FOR    shift, and go to state 48
    IF     shift, and go to state 49
    WHILE  shift, and go to state 50
    ID     shift, and go to state 51

    $default  reduce using rule 41 (simpleStatement)

    compoundStatement    go to state 52
    otherStatements      go to state 55
    loopHeader           go to state 56
    open                 go to state 161
    matched              go to state 162
    simpleStatement      go to state 59
    assignmentStatement  go to state 60
    procedureStatement   go to state 61
    variable             go to state 62


state 151

   66 factorOptions: PAREN_L expression PAREN_R .

    $default  reduce using rule 66 (factorOptions)


state 152

   68 functionReference: ID PAREN_L actualParameterList . PAREN_R

    PAREN_R  shift, and go to state 163


state 153

   54 addOpTerm: addOp term . addOpTerm

    OR     shift, and go to state 129
    ADDOP  shift, and go to state 130

    $default  reduce using rule 55 (addOpTerm)

    addOpTerm  go to state 164
    addOp      go to state 132


state 154

   58 mulOpFactor: mulOp factor . mulOpFactor

    AND      shift, and go to state 133
    MOD      shift, and go to state 134
    MULTIOP  shift, and go to state 135

    $default  reduce using rule 59 (mulOpFactor)

    mulOpFactor  go to state 165
    mulOp        go to state 137


state 155

   44 apList: expression SEPARATOR apList .

    $default  reduce using rule 44 (apList)


state 156

   50 componentSelection: ARRAY_L expression ARRAY_R componentSelection .

    $default  reduce using rule 50 (componentSelection)


state 157

   82 type: ARRAY ARRAY_L INT RANGE INT ARRAY_R OF . type

    ARRAY   shift, and go to state 24
    RECORD  shift, and go to state 25
    ID      shift, and go to state 26

    type  go to state 166


state 158

   13 functionDeclaration: FUNC ID PAREN_L formalParameterList PAREN_R DECLARE resultType EOL . blockOrForward

    FORWARD  shift, and go to state 145
    VAR      shift, and go to state 11

    $default  reduce using rule 3 (variableDeclarations)

    variableDeclarations  go to state 146
    blockOrForward        go to state 167
    block                 go to state 148


state 159

   18 block: variableDeclarations compoundStatement .

    $default  reduce using rule 18 (block)


state 160

   31 loopHeader: FOR ID ASSIGNMENT expression TO expression . DO

    DO  shift, and go to state 168


state 161

   34 open: IF expression THEN matched ELSE open .

    $default  reduce using rule 34 (open)


state 162

   36 matched: IF expression THEN matched ELSE matched .

    $default  reduce using rule 36 (matched)


state 163

   68 functionReference: ID PAREN_L actualParameterList PAREN_R .

    $default  reduce using rule 68 (functionReference)


state 164

   54 addOpTerm: addOp term addOpTerm .

    $default  reduce using rule 54 (addOpTerm)


state 165

   58 mulOpFactor: mulOp factor mulOpFactor .

    $default  reduce using rule 58 (mulOpFactor)


state 166

   82 type: ARRAY ARRAY_L INT RANGE INT ARRAY_R OF type .

    $default  reduce using rule 82 (type)


state 167

   13 functionDeclaration: FUNC ID PAREN_L formalParameterList PAREN_R DECLARE resultType EOL blockOrForward .

    $default  reduce using rule 13 (functionDeclaration)


state 168

   31 loopHeader: FOR ID ASSIGNMENT expression TO expression DO .

    $default  reduce using rule 31 (loopHeader)
